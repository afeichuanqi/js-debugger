diff --git a/node_modules/anyproxy/lib/log.js b/node_modules/anyproxy/lib/log.js
index 4bfde69..0ca7c6d 100644
--- a/node_modules/anyproxy/lib/log.js
+++ b/node_modules/anyproxy/lib/log.js
@@ -2,6 +2,7 @@
 
 const color = require('colorful');
 const util = require('./util');
+const remote = require('@electron/remote')
 
 let ifPrint = true;
 let logLevel = 0;
@@ -32,6 +33,7 @@ function printLog(content, type) {
       if (logLevel > 0) {
         return;
       }
+      remote.getGlobal('eventEmitter').emit('AnyProxyLog', `[AnyProxy Log][${timeString}]: ` , content);
       console.log(color.cyan(`[AnyProxy Log][${timeString}]: ` + content));
       break;
     }
@@ -40,6 +42,7 @@ function printLog(content, type) {
       if (logLevel > 1) {
         return;
       }
+      remote.getGlobal('eventEmitter').emit('AnyProxyLog', `[AnyProxy ERROR][${timeString}]: ` , content);
       console.error(color.red(`[AnyProxy ERROR][${timeString}]: ` + content));
       break;
     }
@@ -48,7 +51,7 @@ function printLog(content, type) {
       if (logLevel > 2) {
         return;
       }
-
+      remote.getGlobal('eventEmitter').emit('AnyProxyLog', `[AnyProxy RULE_ERROR][${timeString}]: ` , content);
       console.error(color.red(`[AnyProxy RULE_ERROR][${timeString}]: ` + content));
       break;
     }
@@ -57,17 +60,19 @@ function printLog(content, type) {
       if (logLevel > 3) {
         return;
       }
-
+      remote.getGlobal('eventEmitter').emit('AnyProxyLog', `[AnyProxy WARN][${timeString}]: ` , content);
       console.error(color.yellow(`[AnyProxy WARN][${timeString}]: ` + content));
       break;
     }
 
     case LogLevelMap.debug: {
+      remote.getGlobal('eventEmitter').emit('AnyProxyLog', `[AnyProxy Log][${timeString}]: ` , content);
       console.log(color.cyan(`[AnyProxy Log][${timeString}]: ` + content));
       return;
     }
 
     default : {
+      remote.getGlobal('eventEmitter').emit('AnyProxyLog', `[AnyProxy Log][${timeString}]: ` , content);
       console.log(color.cyan(`[AnyProxy Log][${timeString}]: ` + content));
       break;
     }
diff --git a/node_modules/anyproxy/lib/requestHandler.js b/node_modules/anyproxy/lib/requestHandler.js
index 6a6c6c0..83bf2e5 100644
--- a/node_modules/anyproxy/lib/requestHandler.js
+++ b/node_modules/anyproxy/lib/requestHandler.js
@@ -13,7 +13,7 @@ const http = require('http'),
   co = require('co'),
   WebSocket = require('ws'),
   HttpsServerMgr = require('./httpsServerMgr'),
-  brotliTorb = require('brotli'),
+  brotliTorb = require('brotli/decompress'),
   Readable = require('stream').Readable;
 
 const requestErrorHandler = require('./requestErrorHandler');
@@ -141,7 +141,7 @@ function fetchRemoteResponse(protocol, options, reqData, config) {
 
               try {
                 // an Unit8Array returned by decompression
-                const result = brotliTorb.decompress(serverResData);
+                const result = brotliTorb(serverResData);
                 fulfill(Buffer.from(result));
               } catch (e) {
                 rejectParsing(e);
